/**
 * version@1.0.3
 */
import { builtinModules } from 'module'
import { Plugin as VitePlugin } from 'vite'

const externals = ['electron', ...builtinModules]
// const builtins = builtinModules.filter(m => !/^_|^(internal|v8|node-inspect)\/|\//.test(m))
export interface Options {
  // /**
  //  * The option will be work on 'viteConfig.build.rollupOptions.external', 'viteConfig.optimizeDeps.exclude' option.
  //  * @default ['electron', ...require('module').builtinModules]
  //  */
  // externals?: string[]
}

export function electron(options: Options = {}): VitePlugin[] {
  const cleanUrl = (url: string) => url.replace(/\?.*$/s, '').replace(/#.*$/s, '')
  const isLoadElectron = (id: string) => {
    const cid = cleanUrl(id)
    // pre-build: 'node_modules/.vite/electron.js'
    // pnpm     : 'node_modules/.pnpm/electron@16.0.2/node_modules/electron/index.js'
    // yarn     : 'node_modules/electron/index.js'
    // npm      : 'node_modules/electron/index.js'
    return cid.endsWith('electron/index.js') || cid.endsWith('.vite/electron.js')
  }

  const electronResolve: VitePlugin = {
    name: 'vitejs-plugin-electron:electron-resolve',
    apply: 'serve',
    transform(code, id) {
      if (isLoadElectron(id)) {
        const electronModule = `
/**
 * All exports module see https://www.electronjs.org -> API -> Renderer Process Modules
 */
const {
  clipboard,
  nativeImage,
  shell,
  contextBridge,
  crashReporter,
  ipcRenderer,
  webFrame,
  desktopCapturer,
} = require('electron');

export {
  clipboard,
  nativeImage,
  shell,
  contextBridge,
  crashReporter,
  ipcRenderer,
  webFrame,
  desktopCapturer,
}

export default { clipboard, nativeImage, shell, contextBridge, crashReporter, ipcRenderer, webFrame, desktopCapturer };
`

        return {
          code: electronModule,
          map: null,
        }
      }

      return null
    }
  }

  const builtinModulesResolve: VitePlugin = {
    apply: 'serve',
    name: 'vitejs-plugin-electron:builtinModules-resolve',
    transform(code, id) {
      if (id.includes('__vite-browser-external')) {
        const moduleId = id.split(':')[1];
        if (builtinModules.includes(moduleId)) {
          const nodeModule = require(moduleId)
          const attrs = Object.keys(nodeModule)
          const requireTpl = `const __nodeModule = require('${moduleId}');`
          const declaresTpl = attrs.map(attr => `const ${attr} = __nodeModule.${attr}`).join(';\n') + ';'
          const exportTpl = `export {\n  ${attrs.join(',\n  ')},\n}`
          const exportDefault = `export default { ${attrs.join(', ')} };`

          const nodeModuleCode = `
${requireTpl}

${declaresTpl}

${exportTpl}

${exportDefault}

`

          return {
            code: nodeModuleCode,
            map: null,
          }
        }
      }

      return null
    },
  }

  return [electronResolve, builtinModulesResolve]
}

/**
 * @description ['electron', ...require('module').builtinModules]
 */
electron.externals = externals

export default electron
